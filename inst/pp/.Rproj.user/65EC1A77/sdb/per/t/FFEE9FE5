{
    "collab_server" : "",
    "contents" : "### PP is free software: you can redistribute it and/or modify\n### it under the terms of the GNU General Public License as published by\n### the Free Software Foundation, either version 3 of the License, or\n### (at your option) any later version.\n\n### PP is distributed in the hope that it will be useful,\n### but WITHOUT ANY WARRANTY; without even the implied warranty of\n### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n### GNU General Public License for more details.\n\n### You should have received a copy of the GNU General Public License\n### along with Run Test.  If not, see <http://www.gnu.org/licenses/>.\n### Run Test is free software: you can redistribute it and/or modify\n### it under the terms of the GNU General Public License as published by\n### the Free Software Foundation, either version 3 of the License, or\n### (at your option) any later version.\n\n### PP is distributed in the hope that it will be useful,\n### but WITHOUT ANY WARRANTY; without even the implied warranty of\n### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n### GNU General Public License for more details.\n\n### You should have received a copy of the GNU General Public License\n### along with Run Test.  If not, see <http://www.gnu.org/licenses/>.\n\ncolorList <- function(language){\n  if (language == \"pl\")\n    return (list(\"orange\" = \"orange\",\n                                     \"white\"=\"white\",\n                                     \"gray\" = \"gray\",\n                                     \"red\"=\"#CC6666\",\n                                     \"violet\"=\"#9999CC\",\n                                     \"green\"=\"#66CC99\",\n                                     \"black\" = \"black\"))\n  else\n    return(list(\"orange\" = \"orange\",\n                   \"white\"=\"white\",\n                   \"gray\" = \"gray\",\n                   \"red\"=\"#CC6666\",\n                   \"violet\"=\"#9999CC\",\n                   \"green\"=\"#66CC99\")\n  )\n}\n\nPP_description <- function(){\n  return(\"Application for calculating Poincare plots descriptors for one or more files.\n<ul>\n   <li> <strong>file format</strong> - The application requires either a <strong>text</strong> or <strong>Excel</strong> file (files), with at least the column containing the RR intervals. For text file any extension will be OK, for Excel you must use .xlsx (the latest verion). If you want to use the Excel file format, you must check the <strong>using Excel</strong> checkbox.\n   <li> <strong>column selection</strong> - Enter the number of the column containing the RR intervals in the appropriate window. If you have flags, enter the number of the column holding them after a space or a comma. The 0 flag means <em>correct</em>, or of sinus origin. Select the separator (what you have beteen the columns in the text file) from the drop down menu.\n   <li> <strong>time based filtering</strong> - Enter values to filter the RR intervals based on time. The first value sets the RR intervals that you consider too short to be of sinus origin, the second ones selects the intervals you consider too long to be of sinus origin.\n   <li> Poincare <strong>plot</strong> is created for the first file on the list. If you want a plot for a specific file enter it as a single file for the analysis.\n</ul>\")\n}\nlibrary(shiny)\nshinyUI(\n  fluidPage(\n    titlePanel(\"Measures of the Poincare Plot\"),\n    fluidRow(\n      column(3,\n             wellPanel(\n               textInput(\"variableName\",\"variable name\", \"RR\"),\n               checkboxInput(\"usingExcel\", \"using Excel\", value = FALSE),\n               fileInput('files', label=\"load files in the correct format - see the information on the right\", multiple=TRUE),\n               selectInput(\"separator\", \"select separator\",\n                           list(\"tabulator\", \",\", \";\", \"space\")),\n               textInput(\"data_columns\", \"enter the column for RR intervals and flags - see explanations\", \"1 2\"),\n               textInput(\"minmax\",\"enter minimum and maximum acceptable RR length\", \"0 3000\"),\n               selectInput(\"color\", \"select color from the list below\",\n                           colorList(\"pl\"))\n    \n             )\n      ),\n      column(6,\n             tabsetPanel(\n               tabPanel(\"Poincare plot\",\n                        plotOutput(\"plot\"),\n                        downloadButton('downloadPlot', 'Download Plot')\n               ),\n               tabPanel(\"Numerical results\", tags$style(type=\"text/css\", \"#filesView { overflow-x: auto; max-width: 100%; }\"),\n                        tableOutput(\"filesView\"), \n                        downloadButton('downloadResults', 'Download results as Excel file'))\n               \n             )\n      ),\n\n      column(3, HTML(paste(\"<h4>Explanation</h4>\",PP_description()))\n      )\n    )\n  )\n)\n\n",
    "created" : 1506088597579.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3448652255",
    "id" : "FFEE9FE5",
    "lastKnownWriteTime" : 1507349822,
    "last_content_update" : 1507349822330,
    "path" : "~/Dropbox/Praca/software/opengranary_apps/HRV/pp/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}